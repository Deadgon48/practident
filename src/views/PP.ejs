<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --primary-dark: #2980b9;
            --error-color: #e74c3c;
            --success-color: #2ecc71;
            --warning-color: #f1c40f;
            --background-color: #f5f5f5;
            --text-color: #2c3e50;
            --border-color: #ddd;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: var(--background-color);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 2px solid var(--border-color);
        }

        .logo {
            width: 80px;
            height: 80px;
            margin: 0 auto 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: var(--primary-color);
            border-radius: 50%;
            color: white;
            font-size: 40px;
            font-weight: bold;
            transition: transform 0.3s ease;
        }

        .brand {
            color: var(--primary-color);
            font-size: 32px;
            font-weight: bold;
            margin: 10px 0;
        }

        .user-info {
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 10px;
            margin-top: 15px;
        }

        .user-type {
            background-color: var(--primary-color);
            color: white;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
        }

        .grupo-info {
            background-color: #e3f2fd;
            color: var(--primary-dark);
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .summary-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin: 30px 0;
        }

        .summary-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            border: 1px solid var(--border-color);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .summary-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 15px rgba(0,0,0,0.1);
        }

        .summary-card h3 {
            margin: 0 0 15px 0;
            color: var(--text-color);
            font-size: 16px;
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .summary-card i {
            color: var(--primary-color);
            font-size: 20px;
        }

        .summary-value {
            font-size: 32px;
            font-weight: 700;
            color: var(--primary-color);
        }

        .filters-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin: 30px 0;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 10px;
        }

        .filter-group {
            position: relative;
        }

        .filter-select {
            width: 100%;
            padding: 12px;
            border: 1px solid var(--border-color);
            border-radius: 8px;
            font-size: 14px;
            color: var(--text-color);
            background-color: white;
            transition: all 0.3s ease;
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
        }

        .filter-select:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        .filter-group::after {
            content: '\f078';
            font-family: 'Font Awesome 5 Free';
            font-weight: 900;
            position: absolute;
            right: 12px;
            top: 50%;
            transform: translateY(-50%);
            color: var(--text-color);
            pointer-events: none;
        }

        .practices-table {
            width: 100%;
            border-collapse: collapse;
            margin: 30px 0;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }

        .practices-table th {
            background-color: #f8f9fa;
            padding: 15px;
            text-align: left;
            font-size: 14px;
            font-weight: 600;
            color: var(--text-color);
            border-bottom: 2px solid var(--border-color);
        }

        .practices-table td {
            padding: 15px;
            border-bottom: 1px solid var(--border-color);
            font-size: 14px;
        }

        .practices-table tr:hover {
            background-color: #f8f9fa;
        }

        .status-badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: 500;
            display: inline-flex;
            align-items: center;
            gap: 6px;
        }

        .status-pendiente {
            background-color: #fff3cd;
            color: #856404;
        }

        .status-en-proceso {
            background-color: #cce5ff;
            color: #004085;
        }

        .status-completada {
            background-color: #d4edda;
            color: #155724;
        }

        .status-cancelada {
            background-color: #f8d7da;
            color: #721c24;
        }

        .grade-badge {
            padding: 4px 8px;
            border-radius: 6px;
            font-size: 14px;
            font-weight: 500;
        }

        .grade-high {
            background-color: #d4edda;
            color: #155724;
        }

        .grade-medium {
            background-color: #fff3cd;
            color: #856404;
        }

        .grade-low {
            background-color: #f8d7da;
            color: #721c24;
        }

        .grade-none {
            background-color: #e9ecef;
            color: #6c757d;
        }

        .button {
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-size: 14px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 8px;
        }

        .button-primary {
            background-color: var(--primary-color);
            color: white;
        }

        .button-primary:hover {
            background-color: var(--primary-dark);
            transform: translateY(-1px);
        }

        .button-secondary {
            background-color: #6c757d;
            color: white;
        }

        .button-secondary:hover {
            background-color: #5a6268;
            transform: translateY(-1px);
        }

        .back-button-container {
            text-align: center;
            margin-top: 30px;
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }

        .modal-content {
            background: white;
            padding: 30px;
            border-radius: 12px;
            width: 90%;
            max-width: 600px;
            max-height: 90vh;
            overflow-y: auto;
            position: relative;
            animation: modalSlideIn 0.3s ease;
        }

        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid var(--border-color);
        }

        .modal-title {
            font-size: 20px;
            font-weight: 600;
            color: var(--text-color);
            margin: 0;
        }

        .close-button {
            background: none;
            border: none;
            font-size: 24px;
            color: #666;
            cursor: pointer;
            transition: color 0.3s ease;
        }

        .close-button:hover {
            color: var(--error-color);
        }

        .detail-group {
            margin-bottom: 20px;
        }

        .detail-label {
            font-size: 14px;
            color: #666;
            margin-bottom: 5px;
        }

        .detail-value {
            font-size: 16px;
            color: var(--text-color);
        }

        .error-message {
            background-color: #f8d7da;
            color: #721c24;
            padding: 12px;
            border-radius: 8px;
            margin: 10px 0;
            display: none;
        }

        @keyframes modalSlideIn {
            from { transform: translateY(-20px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px;
            }

            .summary-cards {
                grid-template-columns: 1fr;
            }

            .filters-container {
                grid-template-columns: 1fr;
            }

            .practices-table {
                display: block;
                overflow-x: auto;
            }

            .modal-content {
                width: 95%;
                margin: 10px;
            }
        }

        .loading {
            position: relative;
            pointer-events: none;
        }

        .loading::after {
            content: '';
            position: absolute;
            width: 20px;
            height: 20px;
            top: 50%;
            left: 50%;
            margin: -10px 0 0 -10px;
            border: 3px solid rgba(255,255,255,0.3);
            border-top-color: white;
            border-radius: 50%;
            animation: spin 0.8s linear infinite;
        }

        @keyframes spin {
            to { transform: rotate(360deg); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">PD</div>
            <div class="brand">PracticDent</div>
            <h1>Mis Prácticas</h1>
            <div class="user-info">
                <span class="user-type">
                    <i class="fas fa-user-graduate"></i> Practicante
                </span>
                <span id="userName"></span>
                <span id="grupoInfo" class="grupo-info">
                    <i class="fas fa-users"></i>
                    <span id="grupoName"></span>
                </span>
            </div>
        </div>

        <div id="mainError" class="error-message"></div>

        <div class="summary-cards">
            <div class="summary-card">
                <h3><i class="fas fa-clipboard-list"></i> Prácticas Asignadas</h3>
                <div class="summary-value" id="totalPracticas">-</div>
            </div>
            <div class="summary-card">
                <h3><i class="fas fa-chart-line"></i> Promedio General</h3>
                <div class="summary-value" id="promedioPracticas">-</div>
            </div>
            <div class="summary-card">
                <h3><i class="fas fa-check-circle"></i> Prácticas Completadas</h3>
                <div class="summary-value" id="practicasCompletadas">-</div>
            </div>
            <div class="summary-card">
                <h3><i class="fas fa-star"></i> Satisfacción Pacientes</h3>
                <div class="summary-value" id="satisfaccionPacientes">-</div>
            </div>
        </div>

        <div class="filters-container">
            <div class="filter-group">
                <select class="filter-select" id="materiaFilter">
                    <option value="">Todas las materias</option>
                </select>
            </div>
            <div class="filter-group">
                <select class="filter-select" id="tipoFilter">
                    <option value="">Todos los tipos</option>
                </select>
            </div>
            <div class="filter-group">
                <select class="filter-select" id="estadoFilter">
                    <option value="">Todos los estados</option>
                </select>
            </div>
        </div>

        <div class="table-container">
            <table class="practices-table">
                <thead>
                    <tr>
                        <th>Código</th>
                        <th>Materia</th>
                        <th>Tipo</th>
                        <th>Supervisor</th>
                        <th>Fecha Límite</th>
                        <th>Estado</th>
                        <th>Calificación</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody id="practicesTableBody"></tbody>
            </table>
        </div>

        <div class="back-button-container">
            <button class="button button-secondary" onclick="window.location.href='/P'">
                <i class="fas fa-arrow-left"></i> Volver al Perfil
            </button>
        </div>
    </div>

    <!-- Modal de Detalles -->
    <div id="practiceDetailsModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title">Detalles de la Práctica</h2>
                <button class="close-button" onclick="closeModal()">&times;</button>
            </div>
            <div id="practiceDetails"></div>
        </div>
    </div>

    <script>
 // Variables globales
let currentUser = null;
let practicasData = [];

// Inicialización
document.addEventListener('DOMContentLoaded', async function() {
    try {
        // Verificar sesión
        const userData = sessionStorage.getItem('userData');
        if (!userData) {
            window.location.href = '/';
            return;
        }

        currentUser = JSON.parse(userData);

        // Verificar rol de practicante
        if (currentUser.rol_id !== 2) {
            showError('Acceso no autorizado. Esta página es solo para practicantes.');
            setTimeout(() => {
                window.location.href = '/P';
            }, 3000);
            return;
        }

        // Mostrar nombre del usuario
        document.getElementById('userName').textContent = 
            `${currentUser.nombre} ${currentUser.apellido}`;

        // Cargar datos iniciales
        await Promise.all([
            loadPracticanteData(),
            loadPracticas(),
            loadFilters()
        ]);

        // Configurar listeners
        setupEventListeners();

    } catch (error) {
        console.error('Error en la inicialización:', error);
        showError('Error al cargar los datos');
    }
});

// Cargar datos del practicante
async function loadPracticanteData() {
    try {
        const response = await fetch(`/api/practicantes/${currentUser.id}/info`);
        const data = await response.json();
        
        if (data.success) {
            document.getElementById('grupoName').textContent = data.grupo_nombre;
            document.getElementById('grupoInfo').style.display = 'flex';
        } else {
            throw new Error(data.error || 'Error al cargar datos del practicante');
        }
    } catch (error) {
        console.error('Error:', error);
        showError('Error al cargar información del practicante');
    }
}

// Cargar prácticas
async function loadPracticas() {
    try {
        const response = await fetch(`/api/practicas/practicante/${currentUser.id}`);
        const data = await response.json();

        if (data.success) {
            practicasData = data.practicas;
            updatePracticesTable();
            updateSummaryCards(data.resumen);
        } else {
            throw new Error(data.error || 'Error al cargar prácticas');
        }
    } catch (error) {
        console.error('Error:', error);
        showError('Error al cargar las prácticas');
    }
}

// Cargar filtros
async function loadFilters() {
    try {
        const [materiasResponse, tiposResponse] = await Promise.all([
            fetch('/api/materias'),
            fetch('/api/tipos-practica')
        ]);

        const [materiasData, tiposData] = await Promise.all([
            materiasResponse.json(),
            tiposResponse.json()
        ]);

        if (materiasData.success) {
            populateFilter('materiaFilter', materiasData.materias);
        }

        if (tiposData.success) {
            populateFilter('tipoFilter', tiposData.tipos);
        }

        // Estados predefinidos
        const estados = [
            { id: 'pendiente', nombre: 'Pendiente' },
            { id: 'en-proceso', nombre: 'En Proceso' },
            { id: 'completada', nombre: 'Completada' }
        ];
        populateFilter('estadoFilter', estados);

    } catch (error) {
        console.error('Error al cargar filtros:', error);
        showError('Error al cargar los filtros');
    }
}

// Mostrar detalles de la práctica
async function showPracticeDetails(practicaId) {
    try {
        console.log('Mostrando detalles de práctica:', practicaId);
        const practica = practicasData.find(p => p.id === parseInt(practicaId));
        
        if (!practica) {
            throw new Error('Práctica no encontrada');
        }

        const modal = document.getElementById('practiceDetailsModal');
        const detallesDiv = document.getElementById('practiceDetails');

        const fechaAsignacion = new Date(practica.fecha_asignacion).toLocaleDateString('es-ES', {
            day: 'numeric',
            month: 'long',
            year: 'numeric'
        });

        const fechaLimite = new Date(practica.fecha_limite).toLocaleDateString('es-ES', {
            day: 'numeric',
            month: 'long',
            year: 'numeric'
        });

        detallesDiv.innerHTML = `
            <div class="detail-group">
                <div class="detail-label">Código:</div>
                <div class="detail-value">${practica.codigo}</div>
            </div>
            <div class="detail-group">
                <div class="detail-label">Materia:</div>
                <div class="detail-value">${practica.materia_nombre} (${practica.materia_codigo || ''})</div>
            </div>
            <div class="detail-group">
                <div class="detail-label">Tipo de Práctica:</div>
                <div class="detail-value">${practica.tipo_nombre}</div>
            </div>
            <div class="detail-group">
                <div class="detail-label">Supervisor:</div>
                <div class="detail-value">${practica.supervisor_nombre}</div>
            </div>
            <div class="detail-group">
                <div class="detail-label">Grupo:</div>
                <div class="detail-value">${practica.grupo_nombre}</div>
            </div>
            <div class="detail-group">
                <div class="detail-label">Fecha de Asignación:</div>
                <div class="detail-value">${fechaAsignacion}</div>
            </div>
            <div class="detail-group">
                <div class="detail-label">Fecha Límite:</div>
                <div class="detail-value">${fechaLimite}</div>
            </div>
            <div class="detail-group">
                <div class="detail-label">Estado:</div>
                <div class="detail-value">
                    <span class="status-badge status-${practica.estado_nombre.toLowerCase()}">
                        <i class="fas ${getStatusIcon(practica.estado_nombre)}"></i>
                        ${practica.estado_nombre}
                    </span>
                </div>
            </div>
            <div class="detail-group">
                <div class="detail-label">Descripción:</div>
                <div class="detail-value">${practica.descripcion || 'Sin descripción'}</div>
            </div>
            ${practica.calificacion ? `
                <div class="detail-group">
                    <div class="detail-label">Calificación:</div>
                    <div class="detail-value">
                        <span class="grade-badge ${getGradeClass(practica.calificacion)}">
                            ${practica.calificacion}/100
                        </span>
                    </div>
                </div>
            ` : ''}
            ${practica.retroalimentacion ? `
                <div class="detail-group">
                    <div class="detail-label">Retroalimentación:</div>
                    <div class="detail-value">${practica.retroalimentacion}</div>
                </div>
            ` : ''}
        `;

        modal.style.display = 'flex';
    } catch (error) {
        console.error('Error al mostrar detalles:', error);
        showError('Error al mostrar los detalles de la práctica');
    }
}

// Funciones de utilidad
function populateFilter(filterId, options) {
    const select = document.getElementById(filterId);
    const defaultOption = select.querySelector('option');
    select.innerHTML = '';
    select.appendChild(defaultOption);

    options.forEach(option => {
        const optionElement = document.createElement('option');
        optionElement.value = option.id;
        optionElement.textContent = option.nombre;
        select.appendChild(optionElement);
    });
}

function updatePracticesTable(filteredPracticas = practicasData) {
    const tbody = document.getElementById('practicesTableBody');
    
    if (!filteredPracticas.length) {
        tbody.innerHTML = `
            <tr>
                <td colspan="8" style="text-align: center;">
                    No hay prácticas que coincidan con los filtros seleccionados
                </td>
            </tr>
        `;
        return;
    }

    tbody.innerHTML = filteredPracticas.map(practica => `
        <tr>
            <td>${practica.codigo}</td>
            <td>${practica.materia_nombre}</td>
            <td>${practica.tipo_nombre}</td>
            <td>${practica.supervisor_nombre}</td>
            <td>${formatDate(practica.fecha_limite)}</td>
            <td>
                <span class="status-badge status-${practica.estado_nombre.toLowerCase()}">
                    <i class="fas ${getStatusIcon(practica.estado_nombre)}"></i>
                    ${practica.estado_nombre}
                </span>
            </td>
            <td>
                <span class="grade-badge ${getGradeClass(practica.calificacion)}">
                    ${practica.calificacion ? practica.calificacion + '/100' : 'Sin calificar'}
                </span>
            </td>
            <td>
                <button class="button button-primary" onclick="showPracticeDetails(${practica.id})">
                    <i class="fas fa-eye"></i> Ver
                </button>
            </td>
        </tr>
    `).join('');
}

function updateSummaryCards(resumen) {
    document.getElementById('totalPracticas').textContent = resumen.total || 0;
    document.getElementById('promedioPracticas').textContent = 
        resumen.promedio ? resumen.promedio.toFixed(1) : '-';
    document.getElementById('practicasCompletadas').textContent = resumen.completadas || 0;
    document.getElementById('satisfaccionPacientes').textContent = 
        resumen.satisfaccion_pacientes ? resumen.satisfaccion_pacientes.toFixed(1) : '-';
}

function filterPracticas() {
    const materiaFilter = document.getElementById('materiaFilter').value;
    const tipoFilter = document.getElementById('tipoFilter').value;
    const estadoFilter = document.getElementById('estadoFilter').value;

    const filteredPracticas = practicasData.filter(practica => {
        return (!materiaFilter || practica.materia_id == materiaFilter) &&
               (!tipoFilter || practica.tipo_practica_id == tipoFilter) &&
               (!estadoFilter || practica.estado_nombre.toLowerCase() === estadoFilter);
    });

    updatePracticesTable(filteredPracticas);
}

function setupEventListeners() {
    ['materiaFilter', 'tipoFilter', 'estadoFilter'].forEach(filterId => {
        document.getElementById(filterId).addEventListener('change', filterPracticas);
    });

    window.onclick = event => {
        const modal = document.getElementById('practiceDetailsModal');
        if (event.target === modal) {
            closeModal();
        }
    };
}

// Funciones auxiliares
function getStatusIcon(status) {
    const icons = {
        'Pendiente': 'fa-clock',
        'En Proceso': 'fa-spinner fa-spin',
        'Completada': 'fa-check-circle',
        'Cancelada': 'fa-times-circle'
    };
    return icons[status] || 'fa-circle';
}

function getGradeClass(grade) {
    if (!grade) return 'grade-none';
    if (grade >= 90) return 'grade-high';
    if (grade >= 70) return 'grade-medium';
    return 'grade-low';
}

function formatDate(dateStr) {
    return new Date(dateStr).toLocaleDateString('es-ES', {
        year: 'numeric',
        month: 'long',
        day: 'numeric'
    });
}

function closeModal() {
    document.getElementById('practiceDetailsModal').style.display = 'none';
}

function showError(message) {
    const errorDiv = document.getElementById('mainError');
    errorDiv.textContent = message;
    errorDiv.style.display = 'block';
    setTimeout(() => {
        errorDiv.style.display = 'none';
    }, 5000);
}
    </script>
</body>
</html>