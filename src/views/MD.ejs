<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #3498db;
            --primary-dark: #2980b9;
            --error-color: #e74c3c;
            --success-color: #2ecc71;
            --background-color: #f5f5f5;
            --text-color: #2c3e50;
            --border-color: #ddd;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: var(--background-color);
            min-height: 100vh;
        }

        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 6px rgba(0,0,0,0.1);
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
        }

        .logo {
            width: 80px;
            height: 80px;
            margin: 0 auto 15px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: var(--primary-color);
            border-radius: 50%;
            color: white;
            font-size: 40px;
            font-weight: bold;
            transition: transform 0.3s ease;
        }

        .logo:hover {
            transform: scale(1.05);
        }

        .brand {
            color: var(--primary-color);
            font-size: 32px;
            font-weight: bold;
            margin-bottom: 10px;
        }

        .divider {
            height: 2px;
            background: linear-gradient(to right, var(--primary-color), var(--primary-dark));
            margin: 15px 0;
            border-radius: 2px;
        }

        .section-title {
            font-size: 1.2rem;
            color: var(--primary-color);
            margin: 25px 0 15px;
            padding-bottom: 8px;
            border-bottom: 2px solid var(--primary-color);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .form-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .form-group {
            margin-bottom: 20px;
            position: relative;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: var(--text-color);
            font-weight: 500;
        }

        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid var(--border-color);
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
            box-sizing: border-box;
        }

        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            border-color: var(--primary-color);
            outline: none;
            box-shadow: 0 0 0 3px rgba(52, 152, 219, 0.2);
        }

        .form-group textarea {
            min-height: 100px;
            resize: vertical;
        }

        .help-text {
            font-size: 12px;
            color: #666;
            margin-top: 4px;
        }

        .button-container {
    display: flex;
    justify-content: space-between; /* Asegura que los botones estén separados equitativamente */
    gap: 20px; /* Espacio entre botones */
    margin-top: 30px;
}

.button {
    flex: 1; /* Ambos botones ocuparán el mismo ancho */
    padding: 14px 0; /* Ajusta el tamaño vertical */
    border: none;
    border-radius: 8px;
    font-size: 16px;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.3s ease;
    text-align: center;
    text-decoration: none;
    color: white;
}

.button-primary {
    background-color: var(--primary-color);
}

.button-primary:hover {
    background-color: var(--primary-dark);
}

.button-secondary {
    background-color: #95a5a6;
}

.button-secondary:hover {
    background-color: #7f8c8d;
}
        .profile-section {
            background-color: rgba(46, 204, 113, 0.1);
            padding: 20px;
            border-radius: 8px;
            margin-top: 20px;
            display: none;
            animation: fadeIn 0.3s ease-in-out;
        }

        .profile-section.visible {
            display: block;
        }

        .additional-info {
            display: none;
            padding: 20px;
            background-color: #f8f9fa;
            border-radius: 8px;
            margin-top: 20px;
            animation: fadeIn 0.3s ease-in-out;
        }

        .error-message {
            color: var(--error-color);
            font-size: 14px;
            margin-top: 5px;
            display: none;
            padding: 8px;
            background-color: rgba(231, 76, 60, 0.1);
            border-radius: 4px;
            text-align: center;
        }

        .success-message {
            color: var(--success-color);
            background-color: rgba(46, 204, 113, 0.1);
            padding: 15px;
            border-radius: 8px;
            margin-bottom: 20px;
            text-align: center;
            display: none;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        @media (max-width: 768px) {
            .container {
                padding: 20px;
            }

            .form-grid {
                grid-template-columns: 1fr;
            }

            .button {
                padding: 12px 24px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <div class="logo">PD</div>
            <div class="brand">PracticDent</div>
            <div class="divider"></div>
            <h1>Modificar Datos</h1>
        </div>

        <div id="mainError" class="error-message"></div>
        <div id="successMessage" class="success-message"></div>

        <form id="profileForm">
            <!-- Información básica -->
            <div class="section-title">
                <i class="fas fa-user"></i>
                <span>Información Personal</span>
            </div>

            <div class="form-grid">
                <div class="form-group">
                    <label for="telefono">Teléfono:</label>
                    <input type="tel" id="telefono" name="telefono" 
                           pattern="[0-9]{10}"
                           placeholder="Modificar su teléfono">
                    <div class="help-text">10 dígitos sin espacios ni guiones</div>
                </div>

                <div class="form-group">
                    <label for="usuario">Usuario:</label>
                    <input type="text" id="usuario" name="usuario"
                           placeholder="Modificar su nombre de usuario">
                    <div class="help-text">4-20 caracteres, letras y números</div>
                </div>
            </div>

            <!-- Información de acceso -->
            <div class="section-title">
                <i class="fas fa-lock"></i>
                <span>Información de Acceso</span>
            </div>

            <div class="form-grid">
                <div class="form-group">
                    <label for="password">Nueva Contraseña:</label>
                    <input type="password" id="password" name="password"
                           placeholder="Dejar en blanco para mantener la actual">
                    <div class="help-text">Mínimo 8 caracteres</div>
                </div>

                <div class="form-group">
                    <label for="email">Correo Electrónico:</label>
                    <input type="email" id="email" name="email"
                           placeholder="Modificar su correo electrónico">
                </div>
            </div>

            <!-- Campos específicos por rol -->
            <div id="maestroFields" class="additional-info">
                <div class="section-title">
                    <i class="fas fa-user-md"></i>
                    <span>Información de Maestro</span>
                </div>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="cedula">Cédula Profesional:</label>
                        <input type="text" id="cedula" name="cedula"
                               placeholder="Modificar cédula profesional">
                    </div>
                    
                    <div class="form-group">
                        <label for="especialidad">Especialidad:</label>
                        <select id="especialidad" name="especialidad">
                            <option value="">Seleccione especialidad</option>
                            <% if (especialidades && especialidades.length > 0) { %>
                                <% especialidades.forEach(function(esp) { %>
                                    <option value="<%= esp.id %>"><%= esp.nombre %></option>
                                <% }); %>
                            <% } %>
                        </select>
                    </div>
                </div>
            </div>

            <div id="practicanteFields" class="additional-info">
                <div class="section-title">
                    <i class="fas fa-user-graduate"></i>
                    <span>Información de Practicante</span>
                </div>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="matricula">Matrícula:</label>
                        <input type="text" id="matricula" name="matricula"
                               placeholder="Modificar matrícula">
                    </div>
                    
                    <div class="form-group">
                        <label for="semestre">Semestre:</label>
                        <select id="semestre" name="semestre">
                            <option value="">Seleccione semestre</option>
                            <% for(let i = 1; i <= 12; i++) { %>
                                <option value="<%= i %>">Semestre <%= i %></option>
                            <% } %>
                        </select>
                    </div>
                </div>
            </div>

            <div id="pacienteFields" class="additional-info">
                <div class="section-title">
                    <i class="fas fa-user-injured"></i>
                    <span>Información Médica</span>
                </div>
                <div class="form-grid">
                    <div class="form-group">
                        <label for="tipo_sangre">Tipo de Sangre:</label>
                        <select id="tipo_sangre" name="tipo_sangre">
                            <option value="">Seleccione tipo de sangre</option>
                            <option value="O+">O+</option>
                            <option value="O-">O-</option>
                            <option value="A+">A+</option>
                            <option value="A-">A-</option>
                            <option value="B+">B+</option>
                            <option value="B-">B-</option>
                            <option value="AB+">AB+</option>
                            <option value="AB-">AB-</option>
                        </select>
                    </div>

                    <div class="form-group">
                        <label for="enfermedades">Enfermedades Crónicas:</label>
                        <textarea id="enfermedades" name="enfermedades"
                                 placeholder="Modificar enfermedades crónicas"></textarea>
                    </div>
                </div>

                <div class="form-grid">
                    <div class="form-group">
                        <label for="contacto_emergencia">Contacto de Emergencia:</label>
                        <input type="text" id="contacto_emergencia" name="contacto_emergencia"
                               placeholder="Nombre del contacto">
                    </div>

                    <div class="form-group">
                        <label for="tel_emergencia">Teléfono de Emergencia:</label>
                        <input type="tel" id="tel_emergencia" name="tel_emergencia"
                               pattern="[0-9]{10}"
                               placeholder="Teléfono de emergencia">
                        <div class="help-text">10 dígitos sin espacios ni guiones</div>
                    </div>
                </div>
            </div>

            <div class="button-container">
                <button type="submit" class="button button-primary">
                    <i class="fas fa-save"></i> Guardar Cambios
                </button>
                <a href="/P" class="button button-secondary">
                    <i class="fas fa-arrow-left"></i> Volver al Perfil
                </a>
            </div>
        </form>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            try {
                // Verificar sesión
                const userData = sessionStorage.getItem('userData');
                if (!userData) {
                    window.location.href = '/';
                    return;
                }
    
                // Cargar datos del usuario
                await loadUserData();
                setupFormHandlers();
            } catch (error) {
                console.error('Error en la inicialización:', error);
                showError('Error al cargar los datos');
            }
        });
    
        async function loadUserData() {
            try {
                const userData = JSON.parse(sessionStorage.getItem('userData'));
                const response = await fetch(`/getUserData/${userData.id}`);
                
                if (!response.ok) {
                    throw new Error('Error al obtener datos del servidor');
                }
    
                const data = await response.json();
    
                if (data.success) {
                    fillFormData(data.userData);
                    showRoleFields(data.userData.rol_id);
                } else {
                    throw new Error(data.error || 'Error al cargar los datos del usuario');
                }
            } catch (error) {
                console.error('Error:', error);
                showError('Error al cargar los datos del usuario');
            }
        }
    
        function fillFormData(userData) {
            // Campos básicos
            const basicFields = ['telefono', 'usuario', 'email'];
            basicFields.forEach(field => {
                const element = document.getElementById(field);
                if (element) {
                    element.value = userData[field] || '';
                }
            });
    
            // Campos específicos por rol
            switch(parseInt(userData.rol_id)) {
                case 1: // Maestro
                    if (document.getElementById('cedula')) {
                        document.getElementById('cedula').value = userData.cedula_profesional || '';
                    }
                    if (document.getElementById('especialidad')) {
                        document.getElementById('especialidad').value = userData.especialidad_id || '';
                    }
                    break;
    
                case 2: // Practicante
                    if (document.getElementById('matricula')) {
                        document.getElementById('matricula').value = userData.matricula || '';
                    }
                    if (document.getElementById('semestre')) {
                        document.getElementById('semestre').value = userData.semestre_actual || '';
                    }
                    if (document.getElementById('grupo_id')) {
                        document.getElementById('grupo_id').value = userData.grupo_id || '';
                    }
                    break;
    
                case 3: // Paciente
                    const pacienteFields = {
                        'tipo_sangre': 'tipo_sangre',
                        'enfermedades': 'enfermedades_cronicas',
                        'contacto_emergencia': 'contacto_emergencia',
                        'tel_emergencia': 'telefono_emergencia'
                    };
    
                    Object.entries(pacienteFields).forEach(([elementId, dataField]) => {
                        const element = document.getElementById(elementId);
                        if (element) {
                            element.value = userData[dataField] || '';
                        }
                    });
                    break;
            }
        }
    
        function showRoleFields(rolId) {
            // Ocultar todos los campos específicos
            document.querySelectorAll('.additional-info').forEach(el => {
                el.style.display = 'none';
            });
    
            // Mostrar campos según rol
            const roleFields = {
                1: 'maestroFields',
                2: 'practicanteFields',
                3: 'pacienteFields'
            };
    
            const fieldId = roleFields[rolId];
            if (fieldId) {
                const element = document.getElementById(fieldId);
                if (element) {
                    element.style.display = 'block';
                }
            }
        }
    
        function setupFormHandlers() {
            const form = document.getElementById('profileForm');
            
            if (!form) return;
    
            form.addEventListener('submit', async function(e) {
                e.preventDefault();
                
                const submitButton = form.querySelector('button[type="submit"]');
                submitButton.disabled = true;
                submitButton.innerHTML = '<i class="fas fa-spinner fa-spin"></i> Guardando...';
    
                try {
                    const formData = new FormData(this);
                    const userData = JSON.parse(sessionStorage.getItem('userData'));
                    
                    const formDataObj = Object.fromEntries(formData.entries());
    
                    const response = await fetch('/updateProfile', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            userId: userData.id,
                            ...formDataObj
                        })
                    });
    
                    if (!response.ok) {
                        throw new Error('Error en la respuesta del servidor');
                    }
    
                    const data = await response.json();
    
                    if (data.success) {
                        showSuccess('Datos actualizados correctamente');
                        
                        // Actualizar datos en sessionStorage
                        const updatedUserData = {
                            ...userData,
                            ...data.userData
                        };
                        sessionStorage.setItem('userData', JSON.stringify(updatedUserData));
                        
                        setTimeout(() => {
                            window.location.href = '/P';
                        }, 2000);
                    } else {
                        throw new Error(data.error || 'Error al actualizar los datos');
                    }
                } catch (error) {
                    console.error('Error:', error);
                    showError(error.message || 'Error al procesar la actualización');
                } finally {
                    submitButton.disabled = false;
                    submitButton.innerHTML = '<i class="fas fa-save"></i> Guardar Cambios';
                }
            });
    
            // Limpiar mensajes al escribir
            document.querySelectorAll('input, select, textarea').forEach(element => {
                element.addEventListener('input', clearMessages);
            });
        }
    
        function showSuccess(message) {
            const successDiv = document.getElementById('successMessage');
            if (successDiv) {
                successDiv.textContent = message;
                successDiv.style.display = 'block';
                successDiv.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        }
    
        function showError(message) {
            const errorDiv = document.getElementById('mainError');
            if (errorDiv) {
                errorDiv.textContent = message;
                errorDiv.style.display = 'block';
                errorDiv.scrollIntoView({ behavior: 'smooth', block: 'start' });
            }
        }
    
        function clearMessages() {
            const mainError = document.getElementById('mainError');
            const successMessage = document.getElementById('successMessage');
            
            if (mainError) mainError.style.display = 'none';
            if (successMessage) successMessage.style.display = 'none';
        }
    </script>
</body>
</html>